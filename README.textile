h1. Rebar Templates

h2. Overview

This might really only be useful for me, but I thought I would share the 
Rebar templates that I have written to streamline my Erlang development.

So far it only consists of templates for the following:
* ejabberd module
* OTP gen_server callback modules
* OTP gen_event callback modules
* simple rebar project layout
* escript starter script
* OTP application and supervisor callback modules
* Nitrogen page handler (for Nitrogen v2+)

h2. Notes

If you don't already you can clone this Git repository in your ${HOME}/.rebar/templates directory, i.e.:

<pre>
<code>
 $ git clone git://github.com/mbbx6spp/rebar-templates.git ~/.rebar/templates
</code>
</pre>
(Thanks "@dizzyd":http://twitter.com/dizzyd for the pointer.)

Alternatively you can add this as a submodule under ${PROJECT_ROOT}/priv/templates if you want to use 
these templates just for a particular project.

h2. Developer(s)

* "Ruan Pienaar":http://twitter.com/SusanPotter

h2. Contributor(s)

* "Ahmed D. Omar":http://twitter.com/spawn_think - bug fix in ejabberdmod template (s/init\/7/init\/2/ in exports).

h2. Examples

h3. Rebar Project Layout

If you want to create a new rebar directory layout for your new project you can do the following:

<pre>
<code>
 $ mkdir project_name
 $ cd project_name
 $ rebar create template=project project_name=project_name description="Describe your project here."
</code>
</pre>

This will generate 6 directories and 4 files by default that are organized like the following:
<pre>
<code>
.
├── deps/
├── ebin/
├── Emakefile
├── include/
├── Makefile
├── priv/
├── README
├── rebar.config
├── src/
└── tests/
</code>
</pre>

h3. ejabberd Module

To generate a stub of an ejabberd extension module that intercepts sent and received packets you can do the following:
<pre>
<code>
 %% inside your rebar based project directory
 $ rebar create template=ejabberdmod name=mod_name_here
</code>
</pre>

HTH
"@SusanPotter":http://twitter.com/SusanPotter

